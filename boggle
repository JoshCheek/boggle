#!/usr/bin/env ruby
require 'set'
require 'io/console'
require_relative 'boggle_cli'

board = build_board
cli = BoggleCli.new(
  board:      build_board,
  speed:      1,
  start_time: Time.now,
)

# hide / show cursor
print cli.hide_cursor
at_exit { print cli.show_cursor }

# read chars instead of lines
$stdin.raw!
at_exit { $stdin.cooked! }

# blocks until there is a reason to print
print_the_board = Queue.new << :initial_print

# updates the input as it is entered
input_thread = Thread.new do
  loop do
    input = $stdin.readpartial(1000)
    needs_print = false
    input.each_char { |char| needs_print ||= cli.add_input char }
    print_the_board << :input if needs_print
  end
end

# updates the time as it changes
time_thread = Thread.new do
  loop do
    sleep 1
    print_the_board << :time if cli.update_time Time.now
  end
end

until cli.over?
  print_the_board.shift # wait until we're told to print
  print_the_board.clear # we only need to be told once, y'all
  $stdout.print cli.to_s $stdin.winsize
end

print cli.final_screen $stdin.winsize
