#!/usr/bin/env ruby
require 'io/console'
require_relative 'boggle_cli'

cli = Boggle::Cli.new(
  board:      Boggle::build_board,
  speed:      1,
  duration:   2 * 60, # seconds
  start_time: Time.now,
  winsize:    $stdin.winsize,
)

# hide / show cursor
print cli.hide_cursor
at_exit { print cli.show_cursor }

# read chars instead of lines
$stdin.raw!
at_exit { $stdin.cooked! }

printq = Queue.new

print_thread = Thread.new do
  until printq.closed? && printq.empty?
    $stdout.print printq.shift
  end
end

input_thread = Thread.new do
  until cli.over?
    printq.enq cli.to_s # redraw everything
    input = $stdin.readpartial 1000
    input.chars.each { |c| cli.add_input c }
  end
end

time_thread = Thread.new do
  until cli.over?
    sleep 1.0/cli.speed
    next unless cli.update_time Time.now
    printq << cli.show_time # redraw just the time
  end
end

# redraw when the window size changes
trap 'SIGWINCH' do
  cli.winsize = $stdin.winsize
  printq.enq cli.to_s
end


time_thread.join
input_thread.kill

printq.enq cli.final_screen $stdin.winsize
printq.close
print_thread.join
